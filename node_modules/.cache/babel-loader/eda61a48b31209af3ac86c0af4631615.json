{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vicio\\\\Projects\\\\Flyball\\\\flyball\\\\flyball\\\\src\\\\components\\\\youtube\\\\YoutubeParallax.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\"; // import './YoutubeParallax.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction YoutubeParallax(_ref) {\n  _s();\n\n  let {\n    embedId\n  } = _ref;\n  const [videoData, setVideoData] = useState('');\n  useEffect(() => {\n    if (!window.YT) {\n      var tag = document.createElement(\"script\");\n      tag.src = \"https://www.youtube.com/iframe_api\";\n      var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } else {}\n\n    window.onPlayerReady = event => {\n      event.target.playVideo();\n      event.target.mute();\n      console.log(\"starting video\");\n    };\n\n    window.onPlayerStateChange = event => {\n      if (event.data === 0) {\n        console.log(\"done\");\n      }\n    };\n\n    window.onYouTubeIframeAPIReady = () => {\n      const player = new window.YT.Player(\"YoutubeParallax\", {\n        width: 400,\n        height: 400,\n        playerVars: {\n          autoplay: 1,\n          controls: 0,\n          playlist: \"oklyzU9uS18\",\n          loop: 1\n        },\n        videoId: \"oklyzU9uS18\",\n        events: {\n          onReady: window.onPlayerReady,\n          onStateChange: window.onPlayerStateChange\n        }\n      });\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-responsive\",\n    id: \"YoutubeParallax\",\n    style: {\n      border: '#008000 solid 3px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(YoutubeParallax, \"6UZVO6h316Ow4wTra8uwwUGzPeE=\");\n\n_c = YoutubeParallax;\n;\nexport default YoutubeParallax;\n\nvar _c;\n\n$RefreshReg$(_c, \"YoutubeParallax\");","map":{"version":3,"sources":["C:/Users/Vicio/Projects/Flyball/flyball/flyball/src/components/youtube/YoutubeParallax.js"],"names":["React","useState","useEffect","useRef","PropTypes","YoutubeParallax","embedId","videoData","setVideoData","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onPlayerReady","event","target","playVideo","mute","console","log","onPlayerStateChange","data","onYouTubeIframeAPIReady","player","Player","width","height","playerVars","autoplay","controls","playlist","loop","videoId","events","onReady","onStateChange","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;;;AAMA,SAASC,eAAT,OAAqC;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,MAAM,CAACC,EAAZ,EAAgB;AACd,UAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAV;AACAF,MAAAA,GAAG,CAACG,GAAJ,GAAU,oCAAV;AACA,UAAIC,cAAc,GAAGH,QAAQ,CAACI,oBAAT,CAA8B,QAA9B,EAAwC,CAAxC,CAArB;AACAD,MAAAA,cAAc,CAACE,UAAf,CAA0BC,YAA1B,CAAuCP,GAAvC,EAA4CI,cAA5C;AACD,KALD,MAKO,CACN;;AAEDN,IAAAA,MAAM,CAACU,aAAP,GAAwBC,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACC,MAAN,CAAaC,SAAb;AACAF,MAAAA,KAAK,CAACC,MAAN,CAAaE,IAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAJD;;AAMAhB,IAAAA,MAAM,CAACiB,mBAAP,GAA8BN,KAAD,IAAW;AACtC,UAAIA,KAAK,CAACO,IAAN,KAAe,CAAnB,EAAsB;AACpBH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,KAJD;;AAMAhB,IAAAA,MAAM,CAACmB,uBAAP,GAAiC,MAAM;AACrC,YAAMC,MAAM,GAAG,IAAIpB,MAAM,CAACC,EAAP,CAAUoB,MAAd,CAAqB,iBAArB,EAAwC;AACrDC,QAAAA,KAAK,EAAE,GAD8C;AAErDC,QAAAA,MAAM,EAAE,GAF6C;AAGrDC,QAAAA,UAAU,EAAE;AACVC,UAAAA,QAAQ,EAAE,CADA;AAEVC,UAAAA,QAAQ,EAAE,CAFA;AAGVC,UAAAA,QAAQ,EAAE,aAHA;AAIVC,UAAAA,IAAI,EAAE;AAJI,SAHyC;AASrDC,QAAAA,OAAO,EAAE,aAT4C;AAUrDC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAE/B,MAAM,CAACU,aADV;AAENsB,UAAAA,aAAa,EAAEhC,MAAM,CAACiB;AAFhB;AAV6C,OAAxC,CAAf;AAeD,KAhBD;AAiBD,GAtCQ,CAAT;AAwCE,sBACA;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,EAAE,EAAC,iBAArC;AAAuD,IAAA,KAAK,EAAE;AAAEgB,MAAAA,MAAM,EAAE;AAAV;AAA9D;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;GAhDQrC,e;;KAAAA,e;AAgDR;AAID,eAAeA,eAAf","sourcesContent":["import React, {useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import './YoutubeParallax.css';\r\n\r\n\r\n\r\n\r\n\r\nfunction YoutubeParallax  ({embedId}){ \r\nconst [videoData, setVideoData] = useState('');\r\n\r\nuseEffect(() => {\r\n  if (!window.YT) {\r\n    var tag = document.createElement(\"script\");\r\n    tag.src = \"https://www.youtube.com/iframe_api\";\r\n    var firstScriptTag = document.getElementsByTagName(\"script\")[0];\r\n    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n  } else {\r\n  }\r\n\r\n  window.onPlayerReady = (event) => {\r\n    event.target.playVideo();\r\n    event.target.mute();\r\n    console.log(\"starting video\");\r\n  };\r\n\r\n  window.onPlayerStateChange = (event) => {\r\n    if (event.data === 0) {\r\n      console.log(\"done\");\r\n    }\r\n  };\r\n\r\n  window.onYouTubeIframeAPIReady = () => {\r\n    const player = new window.YT.Player(\"YoutubeParallax\", {\r\n      width: 400,\r\n      height: 400,\r\n      playerVars: {\r\n        autoplay: 1,\r\n        controls: 0,\r\n        playlist: \"oklyzU9uS18\",\r\n        loop: 1\r\n      },\r\n      videoId: \"oklyzU9uS18\",\r\n      events: {\r\n        onReady: window.onPlayerReady,\r\n        onStateChange: window.onPlayerStateChange\r\n      }\r\n    });\r\n  };\r\n});\r\n\r\n  return(\r\n  <div className=\"video-responsive\" id=\"YoutubeParallax\" style={{ border: '#008000 solid 3px' }}>\r\n    \r\n  </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default YoutubeParallax;"]},"metadata":{},"sourceType":"module"}